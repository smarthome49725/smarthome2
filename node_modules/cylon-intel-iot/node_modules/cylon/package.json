{
  "name": "cylon",
  "version": "0.21.2",
  "main": "lib/cylon.js",
  "description": "A JavaScript robotics framework for Node.js",
  "homepage": "http://cylonjs.com",
  "bugs": {
    "url": "https://github.com/hybridgroup/cylon/issues"
  },
  "author": {
    "name": "The Hybrid Group",
    "email": "cylonjs@hybridgroup.com"
  },
  "contributors": [
    {
      "name": "Ron Evans",
      "email": "ron@hybridgroup.com"
    },
    {
      "name": "Andrew Stewart",
      "email": "andrew@hybridgroup.com"
    },
    {
      "name": "Edgar Silva",
      "email": "edgar@hybridgroup.com"
    },
    {
      "name": "Mario 'Kuroir' Ricalde",
      "email": "mario@hybridgroup.com"
    },
    {
      "name": "Gize Bonilla",
      "email": "gize@hybridgroup.com"
    },
    {
      "name": "Adrian Zankich",
      "email": "adrian@hybridgroup.com"
    }
  ],
  "repository": {
    "type": "git",
    "url": "git+https://github.com/hybridgroup/cylon.git"
  },
  "license": "Apache 2.0",
  "hardware": {
    "*": false,
    "./": false,
    "async": true,
    "./lib": true
  },
  "engines": {
    "node": ">= 0.10.20"
  },
  "devDependencies": {
    "sinon-chai": "2.6.0",
    "chai": "1.9.2",
    "mocha": "1.21.5",
    "sinon": "1.10.3"
  },
  "dependencies": {
    "async": "0.9.0",
    "express": "4.9.8",
    "body-parser": "1.9.0",
    "robeaux": "0.3.0"
  },
  "readme": "[![Cylon.js](http://i.imgur.com/U3paNhR.png)](http://cylonjs.com)\n\nCylon.js is a JavaScript framework for robotics and physical computing built on\ntop of Node.js.\n\nIt provides a simple, but powerful way to create solutions that incorporate\nmultiple, different hardware devices concurrently.\n\nWant to use Ruby on robots? Check out our sister project, [Artoo][].\n\nWant to use Golang to power your robots? Check out our sister project,\n[Gobot][].\n\n[Artoo]: http://artoo.io\n[Gobot]: http://gobot.io\n\n## Build Status:\n\n[![Build Status](https://secure.travis-ci.org/hybridgroup/cylon.png?branch=master)](http://travis-ci.org/hybridgroup/cylon) [![Code Climate](https://codeclimate.com/github/hybridgroup/cylon.png)](https://codeclimate.com/github/hybridgroup/cylon) [![Code Climate](https://codeclimate.com/github/hybridgroup/cylon/coverage.png)](https://codeclimate.com/github/hybridgroup/cylon)\n\n## Getting Started\n\n### Installation\n\nAll you need to get started on a new robot is the `cylon` module:\n\n    npm install cylon\n\nWith the core module installed, now install the modules for whatever hardware\nsupport you need. For the Arduino + LED blink example, we'll need the `firmata` module:\n\n    npm install cylon-firmata\n\n## Examples\n\n### Arduino + LED\n\nThe below example connects to an Arduino over a serial connection, and blinks an\nLED once per second.\n\nThe example requires that the Arduino have the Firmata sketch installed; which\ncan be obtained either through the Ardunio IDE or the `gort arduino upload\nfirmata` command available in [gort](http://gort.io).\n\n```javascript\nvar Cylon = require('cylon');\n\n// define the robot\nvar robot = Cylon.robot({\n  // change the port to the correct one for your Arduino\n  connections: {\n    arduino: { adaptor: 'firmata', port: '/dev/ttyACM0' }\n  },\n\n  devices: {\n    led: { driver: 'led', pin: 13 }\n  },\n\n  work: function(my) {\n    every((1).second(), my.led.toggle);\n  }\n});\n\n// connect to the Arduino and start working\nrobot.start();\n```\n\n### Parrot ARDrone 2.0\n\n```javascript\nvar Cylon = require('cylon');\n\nCylon.robot({\n  connections: {\n    ardrone: { adaptor: 'ardrone', port: '192.168.1.1' }\n  },\n\n  devices: {\n    drone: { driver: 'ardrone' }\n  },\n\n  work: function(my) {\n    my.drone.takeoff();\n\n    after((10).seconds(), my.drone.land);\n    after((15).seconds(), my.drone.stop);\n  }\n}).start();\n```\n\n### Cat Toy (Leap Motion + Digispark + Servos)\n\n```javascript\nvar Cylon = require('cylon');\n\nCylon.robot({\n  connections: {\n    digispark: { adaptor: 'digispark' },\n    leapmotion: { adaptor: 'leapmotion' }\n  },\n\n  devices: {\n    servo1: { driver: 'servo', pin: 0, connection: 'digispark' },\n    servo2: { driver: 'servo', pin: 1, connection: 'digispark' },\n    leapmotion: { driver: 'leapmotion', connection: 'leapmotion' }\n  },\n\n  work: function(my) {\n    my.x = 90;\n    my.z = 90;\n\n    my.leapmotion.on('hand', function(hand) {\n      my.x = hand.palmX.fromScale(-300, 300).toScale(30, 150);\n      my.z = hand.palmZ.fromScale(-300, 300).toScale(30, 150);\n    });\n\n    every(100, function() {\n      my.servo1.angle(my.x);\n      my.servo2.angle(my.z);\n\n      console.log(my.servo1.currentAngle() + \", \" + my.servo2.currentAngle());\n    });\n  }\n}).start();\n```\n\n### Multiple Spheros + API Server\n\n```javascript\nvar Cylon = require('cylon');\n\n// tell the API server to listen for requests at\n// https://localhost:4000\nCylon.api({ port: 4000 });\n\nvar bots = [\n  { port: '/dev/rfcomm0', name: 'Thelma' },\n  { port: '/dev/rfcomm1', name: 'Louise' }\n];\n\nbots.forEach(function(bot) {\n  Cylon.robot({\n    name: bot.name,\n\n    connections: {\n      sphero: { adaptor: \"sphero\", port: bot.port }\n    },\n\n    devices: {\n      sphero: { driver: \"sphero\" }\n    },\n\n    work: function(my) {\n      every((1).second(), function() {\n        console.log(my.name);\n        my.sphero.setRandomColor();\n        my.sphero.roll(60, Math.floor(Math.random() * 360));\n      });\n    }\n  });\n});\n\n// start up all robots at once\nCylon.start();\n```\n\n## Fluent Syntax\n\nFor those more familiar with jQuery, D3, or other fluent-style JavaScript\nlibraries, Cylon.JS also supports a fluent syntax:\n\n\n```javascript\nvar Cylon = require('cylon');\n\nCylon\n  .robot()\n  .connection('arduino', { adaptor: 'firmata', port: '/dev/ttyACM0' })\n  .device('led', { driver: 'led', pin: 13 })\n  .on('ready', function(bot) {\n    setInterval(function() {\n      bot.led.toggle();\n    }, 1000);\n  });\n\nCylon.start();\n```\n\n## Hardware Support\n\nCylon.js has an extensible syntax for connecting to multiple, different hardware\ndevices. The following 32 platforms are currently supported:\n\nPlatform  | Support\n--------  | -------\n[Ardrone](http://ardrone2.parrot.com/)                                                                | [cylon-ardrone](https://github.com/hybridgroup/cylon-ardrone)\n[Arduino](http://www.arduino.cc/)                                                                     | [cylon-firmata](https://github.com/hybridgroup/cylon-firmata)\n[Arduino YUN](http://arduino.cc/en/Main/ArduinoBoardYun?from=Products.ArduinoYUN)                     | [cylon-firmata](https://github.com/hybridgroup/cylon-firmata)\n[AT&T M2X](https://m2x.att.com)                                                                       | [cylon-m2x](https://github.com/hybridgroup/cylon-m2x)\n[Audio]()                                                                                             | [cylon-audio](https://github.com/hybridgroup/cylon-audio)\n[Beaglebone Black](http://beagleboard.org/Products/BeagleBone+Black/)                                 | [cylon-beaglebone](https://github.com/hybridgroup/cylon-beaglebone)\n[Bluetooth LE](http://en.wikipedia.org/wiki/Bluetooth_low_energy)                                     | [cylon-ble](https://github.com/hybridgroup/cylon-ble)\n[Crazyflie](http://www.bitcraze.se/)                                                                  | [cylon-crazyflie](https://github.com/hybridgroup/cylon-crazyflie)\n[Digispark](http://digistump.com/products/1)                                                          | [cylon-digispark](https://github.com/hybridgroup/cylon-digispark)\n[Intel Edison](http://www.intel.com/content/www/us/en/do-it-yourself/edison.html)                     | [cylon-intel-iot](https://github.com/hybridgroup/cylon-intel-iot)\n[Intel Galileo](http://www.intel.com/content/www/us/en/do-it-yourself/galileo-maker-quark-board.html) | [cylon-intel-iot](https://github.com/hybridgroup/cylon-intel-iot)\n[Joystick](http://en.wikipedia.org/wiki/Joystick)                                                     | [cylon-joystick](https://github.com/hybridgroup/cylon-joystick)\n[Keyboard](http://en.wikipedia.org/wiki/Computer_keyboard)                                            | [cylon-keyboard](https://github.com/hybridgroup/cylon-keyboard)\n[Leap Motion](https://www.leapmotion.com/)                                                            | [cylon-leapmotion](https://github.com/hybridgroup/cylon-leapmotion)\n[MQTT](http://mqtt.org/)                                                                              | [cylon-mqtt](https://github.com/hybridgroup/cylon-mqtt)\n[Nest](http://nest.com/)                                                                              | [cylon-nest](https://github.com/hybridgroup/cylon-nest)\n[Neurosky](http://store.neurosky.com/products/mindwave-mobile)                                        | [cylon-neurosky](https://github.com/hybridgroup/cylon-neurosky)\n[Ollie](http://gosphero.com/ollie)                                                                    | [cylon-ollie](https://github.com/hybridgroup/cylon-ollie)\n[OpenCV](http://opencv.org/)                                                                          | [cylon-opencv](https://github.com/hybridgroup/cylon-opencv)\n[Phillips Hue](http://www2.meethue.com/)                                                              | [cylon-hue](https://github.com/hybridgroup/cylon-hue)\n[Pebble](http://www.getpebble.com/)                                                                   | [cylon-pebble](https://github.com/hybridgroup/cylon-pebble)\n[Pinoccio](https://pinocc.io)                                                                         | [cylon-pinoccio](https://github.com/hybridgroup/cylon-pinoccio)\n[PowerUp 3.0](http://www.poweruptoys.com/products/powerup-v3)                                         | [cylon-powerup](https://github.com/hybridgroup/cylon-powerup)\n[Rapiro](http://www.rapiro.com/)                                                                      | [cylon-rapiro](https://github.com/hybridgroup/cylon-rapiro)\n[Raspberry Pi](http://www.raspberrypi.org/)                                                           | [cylon-raspi](https://github.com/hybridgroup/cylon-raspi)\n[Salesforce](http://www.force.com/)                                                                   | [cylon-force](https://github.com/hybridgroup/cylon-force)\n[Skynet](http://skynet.im/)                                                                           | [cylon-skynet](https://github.com/hybridgroup/cylon-skynet)\n[Spark](http://www.spark.io/)                                                                         | [cylon-spark](https://github.com/hybridgroup/cylon-spark)\n[Speech]()                                                                                            | [cylon-speech](https://github.com/hybridgroup/cylon-speech)\n[Sphero](http://www.gosphero.com/)                                                                    | [cylon-sphero](https://github.com/hybridgroup/cylon-sphero)\n[Tessel](https://tessel.io/)                                                                          | [cylon-tessel](https://github.com/hybridgroup/cylon-tessel)\n[WICED Sense](http://www.broadcom.com/products/wiced/sense/)                                          | [cylon-wiced-sense](https://github.com/hybridgroup/cylon-wiced-sense)\n\nOur implementation of GPIO (General Purpose Input/Output) allows for a shared\nset of drivers supporting a number of devices:\n\n- [GPIO](https://en.wikipedia.org/wiki/General_Purpose_Input/Output) <=> [Drivers](https://github.com/hybridgroup/cylon-gpio)\n  - Analog Sensor\n  - Button\n  - Continuous Servo\n  - Direct Pin\n  - IR Rangefinder\n  - LED\n  - MakeyButton\n  - Motor\n  - Maxbotix Ultrasonic Range Finder\n  - Servo\n\nAdditionally, we also support a number of I2C (Inter-Integrated Circuit) devices\nthrough a shared `cylon-i2c` module:\n\n- [I2C](https://en.wikipedia.org/wiki/I%C2%B2C) <=> [Drivers](https://github.com/hybridgroup/cylon-i2c)\n  - BlinkM\n  - BMP180\n  - HMC6352 Digital Compass\n  - LCD Display\n  - MPL115A2 Barometer/Thermometer\n  - MPU6050\n\nWe'll also have many more platforms and drivers coming soon, [follow us on\nTwitter][Twitter] for updates.\n\n[Twitter]: https://twitter.com/cylonjs\n\n## Browser & Mobile Support\n\nCylon.js can be run directly in-browser, using the `browserify` NPM module. You can also run it from withing a Chrome connected app, or a PhoneGap mobile app.\n\nFor more info on browser support, and for help with different configurations, you can find more info [in our docs](/documentation/guides/browser-support).\n\n## API\n\nCylon has a built-in API that you can interact with your robots.\n\nAll you need to start up the API server is to place the following command in your `.js` file after you require Cylon.\n\n```javascript\nvar Cylon = require(\"cylon\");\nCylon.api();\n```\n\nThen visit `https://localhost:3000/` and you are ready to control your robots from a web browser!\n<img src=\"http://cylonjs.com/images/screenshots/robeaux.png\" style=\"margin-top: 15px; width: 100%\">\n\nYou can check out more information on the Cylon API in the docs [here](http://cylonjs.com/documentation/guides/api).\n\n## CLI\n\nCylon uses the Gort [http://gort.io](http://gort.io) Command Line Interface (CLI) so you can access important features right from the command line. We call it \"RobotOps\", aka \"DevOps For Robotics\". You can scan, connect, update device firmware, and more!\n\nCylon also has its own CLI to generate new robots, adaptors, and drivers. You can check it out at [https://github.com/hybridgroup/cylon-cli](https://github.com/hybridgroup/cylon-cli).\n\n## Documentation\n\nWe're busy adding documentation to our website, check it out at\n[cylonjs.com/documentation][docs].\n\nIf you want to help with documentation, you can find the code for our website at\non the [https://github.com/hybridgroup/cylon-site](https://github.com/hybridgroup/cylon-site).\n\n[docs]: http://cylonjs.com/documentation\n[docs site]: https://github.com/hybridgroup/cylon-site\n\n## Contributing\n\n* All patches must be provided under the Apache 2.0 License\n* Please use the -s option in git to \"sign off\" that the commit is your work and you are providing it under the Apache 2.0 License\n* Submit a Github Pull Request to the appropriate branch and ideally discuss the changes with us in IRC.\n* We will look at the patch, test it out, and give you feedback.\n* Avoid doing minor whitespace changes, renamings, etc. along with merged content. These will be done by the maintainers from time to time but they can complicate merges and should be done seperately.\n* Take care to maintain the existing coding style.\n* Add unit tests for any new or changed functionality & lint and test your code using `make test` and `make lint`.\n* All pull requests should be \"fast forward\"\n  * If there are commits after yours use “git rebase -i <new_head_branch>”\n  * If you have local changes you may need to use “git stash”\n  * For git help see [progit](http://git-scm.com/book) which is an awesome (and free) book on git\n\n## Release History\n\nVersion | Notes\n------- | -----\n0.21.2  | Update Robeaux version\n0.21.1  | Add back debug logging for starting/connecting devices/connections\n0.21.0  | Remove Connection/Device objects, update Robot connection/device syntax, fluent syntax updates\n0.20.2  | Correct API issues, possible issue with test setups\n0.20.1  | Revert accidental scrict handling of param in driver initializer\n0.20.0  | Browser support, new module loading, log level support, misc. development changes\n0.19.1  | Correct issue with dynamic method proxying\n0.19.0  | Fluent syntax, improved start/halt, various other updates\n0.18.0  | Updates Robot and Driver commands structure\n0.17.0  | Updates to API to match CPPP-IO spec\n0.16.0  | New IO Utils, removal of Utils#bind, add Adaptor#_noop method.\n0.15.1  | Fixed issue with the API on Tessel\n0.15.0  | Better halting, cleaner startup, removed 'connect' and 'start' events, and misc other cleanups/refactors.\n0.14.0  | Removal of node-namespace and misc. cleanup\n0.13.3  | Fixes bug with disconnect functions not being called.\n0.13.2  | Use pure Express, adds server-sent-events, upd API.\n0.13.1  | Add API authentication and HTTPS support\n0.13.0  | Set minimum Node version to 0.10.20, add utils to global namespace and improve initialization routines\n0.12.0  | Extraction of CLI tooling\n0.11.2  | bugfixes\n0.11.0  | Refactor into pure JavaScript\n0.10.4  | Add JS helper functions\n0.10.3  | Fix dependency issue\n0.10.2  | Create connections convenience vars, refactor config loading\n0.10.1  | Updates required for test driven robotics, update Robeaux version, bugfixes\n0.10.0  | Use Robeaux UX, add CLI commands for helping connect to devices, bugfixes\n0.9.0   | Add AngularJS web interface to API, extensible commands for CLI\n0.8.0   | Refactored Adaptor and Driver into proper base classes for easier authoring of new modules\n0.7.0   | cylon command for generating new adaptors, support code for better GPIO support, literate examples\n0.6.0   | API exposes robot commands, fixes issues in driver/adaptor init\n0.5.0   | Improve API, add GPIO support for reuse in adaptors\n0.4.0   | Refactor proxy in Cylon.Basestar, improve API\n0.3.0   | Improved Cylon.Basestar, and added API\n0.2.0   | Cylon.Basestar to help develop external adaptors/drivers\n0.1.0   | Initial release for ongoing development\n\n## License\n\nCopyright (c) 2013-2014 The Hybrid Group. Licensed under the Apache 2.0 license.\n",
  "readmeFilename": "README.markdown",
  "_id": "cylon@0.21.2",
  "_from": "cylon@>=0.21.0 <0.22.0"
}
